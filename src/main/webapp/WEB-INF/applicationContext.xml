<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- Enable component scanning -->
	<context:component-scan base-package="cl.cmartinezs.marifer" />
	
	<!-- Enable autowire -->
	<context:annotation-config />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:database.properties</value>
		</property>
	</bean>
	
	<!-- Data Source Declaration -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- Session Factory Declaration -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="cl.cmartinezs.marifer.repository.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">${hibernate.enable_lazy_load_no_trans}</prop>
			</props>
		</property>
	</bean>
	
	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- Transaction Manager is defined -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="mariferAuthenticationDetailsSource" class="cl.cmartinezs.marifer.security.MariferAuthenticationDetailsSource"/>
	
	<bean id="mariferAuthenticationProvider" class="cl.cmartinezs.marifer.security.MariferAuthenticationProvider"/>

	<security:http use-expressions="true">
		<security:intercept-url pattern="/auth/**" access="anonymous" />
		<security:intercept-url pattern="/error/**" access="permitAll" />
		<security:intercept-url pattern="/javax.faces.resource/**"  access="permitAll"/>
		<security:intercept-url pattern="/**" access="authenticated" />
		<security:form-login login-page="/auth/login.jsf"
			authentication-failure-url="/auth/login.jsf?error=true"
			default-target-url="/"
			always-use-default-target="true"
			authentication-details-source-ref="mariferAuthenticationDetailsSource"
			username-parameter="j_username" 
			password-parameter="j_password"
			login-processing-url="/auth/j_spring_security_check" />
		<security:logout logout-success-url="/" logout-url="/auth/logout"/>        
        <security:csrf disabled="true" />
	</security:http>

	<security:authentication-manager>
    	<security:authentication-provider ref="mariferAuthenticationProvider" />
	</security:authentication-manager>
</beans>